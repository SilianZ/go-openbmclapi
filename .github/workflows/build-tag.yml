
name: Create tagged release

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      -
        name: Action Checkout
        uses: actions/checkout@v3
      -
        name: Setup Golang
        uses: actions/setup-go@v4
        with:
          go-version-file: ./go.mod
          cache-dependency-path: ./go.sum
      -
        name: Generate
        run: go generate .
      -
        name: Test
        run: go test -v .
      -
        name: Build
        run: bash ./build.sh
      -
        name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: true
      -
        name: Upload Release Assets
        uses: zyxkad/upload-release-asset-dir@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_dir: ./output

  build-docker:
    runs-on: ubuntu-latest
    steps:
      -
        name: Action Checkout
        uses: actions/checkout@v3
      -
        name: Get current tag
        run: echo "TAG=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            silianz/go-openbmclapi:latest
            silianz/go-openbmclapi:${{env.TAG}}
          platforms: linux/amd64, linux/arm64, linux/riscv64, linux/ppc64le, linux/s390x, linux/386, linux/mips64le, linux/mips64, linux/arm/v7, linux/arm/v6, linux/arm/v8
          cache-from: type=gha
          cache-to: type=gha,mode=max
